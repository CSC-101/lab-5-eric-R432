import data

# Write your functions for each part in the space below.

# Part 1
   # The function for Part 1 should be within the class in data.py.


# Part 2
   # The function for Part 2 should be within the class in data.py.


# Part 3

def time_add(time1, time2):
    total_seconds = time1.seconds + time2.seconds
    total_minutes = time1.minutes + time2.minutes + total_seconds // 60
    total_hours = time1.hours + time2.hours + total_minutes // 60

    seconds = total_seconds % 60
    minutes = total_minutes % 60
    hours = total_hours

    return data.Time(hours,minutes,seconds)




# Part 4
def is_descending(lst: list[float]) -> bool:

    if len(lst) < 2:
        return True


    for i in range(1, len(lst)):
        if lst[i] >= lst[i - 1]:
            return False

    return True

# Part 5
def largest_between(numbers: list[int], lower: int, upper: int) -> int | None:

    if lower > upper:
        return None

    lower = max(lower, 0)
    upper = min(upper, len(numbers) - 1)

    if lower > upper:
        return None

    largest_index = lower
    for i in range(lower, upper + 1):
        if numbers[i] > numbers[largest_index]:
            largest_index = i

    return largest_index

# Part 6

def furthest_from_origin(points: list[data.Point]) -> int | None:
    if not points:
        return None

    furthest_index = 0
    max_distance_sq = points[0].x ** 2 + points[0].y ** 2

    for i in range(1, len(points)):
        distance_sq = points[i].x ** 2 + points[i].y ** 2
        if distance_sq > max_distance_sq:
            max_distance_sq = distance_sq
            furthest_index = i

    return furthest_index
